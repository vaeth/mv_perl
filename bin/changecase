#!/usr/bin/perl
use integer;
use Getopt::Long;
use File::Find;
use strict;

sub version { '$Revision: 1.4 $ ' =~ /Revision:\s([^\s]*)/;
	print "Changecase v$1 by Martin VÃ¤th\n"
	 .    "martin\@mvath.de\n";
	 exit(0)
}

our ($mdot, $ddot, $dirsep) = ('.', '..', '/');

$0 =~ /([^\/]*)$/; our $script = $1;
sub usage {
	my($exitstatus)=@_;
	print STDERR <<"EOUSAGE";
Usage: $script [options] u\|l
Change all filenames in current directory and subdirectory to upper/lower case.
--dir=DIR     -d DIR Change content of DIR instead of $mdot
--recurse     -r     Recurse (default)
--norecurse   -R     Do not recurse, i.e. use only the explicitly given dirs
--skip-links  -L     Do not rename symbolic links
--skip-dirs   -D     Do not rename directories or links to directories
--skip-files  -F     Do not rename files or links to files
--skip-nonfiles -f   Only rename files or links to files
--quiet       -q     Be quiet
--version     -V     Print version number
EOUSAGE
	exit($exitstatus)
}

# Default for the Options:

our ($dir, $recurse, $quiet, $dry_run, $mode,
	$skip_links, $skip_dirs, $skip_files, $skip_nonfiles);
$dir = $mdot;
$recurse = 1;
$quiet = $dry_run = '';
$skip_links = $skip_dirs = $skip_files = $skip_nonfiles = '';

# Parse Options:

$Getopt::Long::bundling = 1;
GetOptions(
	'help|h|?', sub { &usage(0) },
	'version|V', \&version,
	'recurse|r', \$recurse,
	'no-recurse|norecurse|R', sub { $recurse = '' },
	'skip-links|L', \$skip_links,
	'skip-links|D', \$skip_dirs,
	'skip-links|F', \$skip_files,
	'skip-links|f', \$skip_nonfiles,
	'dry-run|n', \$dry_run,
	'dir|d=s', sub { $dir = @_[1] },
	'quiet|q', \$quiet
) or &usage(-1);

# Read first (and only) argument:

$mode = shift(@ARGV);
&usage(1) unless((defined($mode) && (($mode eq 'l') || ($mode eq 'u')))
	|| @ARGV);

# Now we start:

find({ bydepth => $recurse, follows => 1, wanted => \&dorename }, $dir);

sub dorename {
	return if(($_ eq $mdot) || ($_ eq $ddot));
	my $ftest = ($skip_dirs || $skip_files || $skip_nonfiles);
	if($skip_links) {
		return if(-l $_)
	} elsif($ftest) {
		$ftest = '' if(-l $_)
	}
	if($ftest) {
		return if(($skip_dirs && (-d _)) ||
			($skip_files && (-f _)) ||
			($skip_nonfiles && (!(-f _))))
	}
	$File::Find::prune = 1 unless($recurse);
	my $change = (($mode eq 'u') ? uc() : lc());
	return if($change eq $_);
	my $source = $File::Find::dir . $dirsep . $_;
	my $dest = $File::Find::dir . $dirsep . $change;
	if(-e $dest) {
		print(STDERR "warning: $dest exists; do not rename $source\n");
		return
	}
	print("$source -> $dest\n") unless($quiet);
	return if($dry_run);
	rename($_, $change) or
		print(STDERR "warning: Cannot rename $source -> $dest\n");
}
