#!/usr/bin/perl -w
use strict;
use integer;
use Getopt::Long;
use Pod::Usage;
use File::Find;
use Fcntl ':mode';
use Time::localtime;
use File::stat;

my ($mdot,$ddot,$dirsep)=('.','..','/');

sub version () { '$Revision: 1.2 $ '=~ /Revision:\s([^\s]*)/;
  print "Touchdirs v$1 by Martin VÃ¤th\n"
   .    "martin\@mvath.de\n" ; exit 0 }

=head1 NAME

touchdirs - Touch directories according to their newest file

=head1 SYNOPSIS

B<touchdirs> [options] I<dirs>

=head1 DESCRIPTION

Look for all files in I<dirs> and then change the timestamp
according to the newest file contained.

=head1 OPTIONS AND ARGUMENTS

=over 8

=item B<--follow-link> or B<-F>

Follow links to further directories.
Also use time of the file the link points to instead of time of the link.

=item B<--dry-run> or B<--show> or B<-n> or B<-s>

Only show what would be done, do not alter anything.

=item B<--version> or B<-V>

Print version number

=back

=head1 AUTHOR

Martin VE<auml>th E<lt>martin@mvath.deE<gt>

=cut

# Default for the Options:

my $show='';
my $follow='';

# Parse Options:

$Getopt::Long::bundling=1;
GetOptions(
  'help|h', sub { pod2usage(1) },
  'man|?', sub { pod2usage(-verbose=>2) },
  'version|V', \&version,
  'show|dry-run|s|n', \$show,
  'follow-link|F', \$follow,
  'nofollow-link', sub { $follow='' }
) or pod2usage(2);
($#ARGV>=0) or pod2usage(-verbose=>2);

my @DIR=();
my %DIR=();
foreach my $topdir (@ARGV)
{
  @DIR=();
  %DIR=();
  find({ bydepth=>1, follows=>$follow, wanted=>\&dotouch }, $topdir);
  @DIR=sort @DIR;
  @DIR=reverse @DIR;
  foreach my $dir (@DIR)
  {
    my $oritime=(($follow)?stat($dir)->mtime:lstat($dir)->mtime);
    my $newtime=$DIR{$dir};
    if($oritime ne $newtime)
    {
      my $time=ctime($newtime);
      print "touch --date=$time $dir\n";
      unless($show) { system("touch","--date=$time","$dir") }
    }
  }
}

sub dotouch {
# if(($_ eq $mdot) || ($_ eq $ddot)) { return }
  if(-d $_) { return }
  my $time=(($follow)?stat($_)->mtime:lstat($_)->mtime);
  my $dirname=$File::Find::dir;
  while($dirname ne '')
  {
    if(exists($DIR{$dirname}))
    {
      my $oritime=$DIR{$dirname};
      if($time>$oritime)
        { $DIR{$dirname}=$time }
    }
    else
    {
      push @DIR,$dirname;
      $DIR{$dirname}=$time
    }
    if($dirname=~/$dirsep/o)
    {
      $dirname=~/^(.*)$dirsep+/o;
      $dirname=$1;
    }
    else {last}
  }
}
